{"version":3,"sources":["components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","api/api.js","index.js"],"names":["TodoList","state","searchText","status","this","props","selectedId","selectionChanged","todoCompleted","filteredTodos","map","todo","key","id","className","classnames","completed","type","checked","onClick","readOnly","title","userId","newSearch","setState","newStatus","newStatusTodos","todos","filter","length","includes","value","onChange","e","changeSearch","target","name","changeStatus","createTodos","React","Component","CurrentUser","user","deselectUser","email","phone","App","userInfo","selectedUserId","selectUser","newUserId","updateUserInfo","completeTodo","todoId","prevState","clearSelection","a","fetch","then","result","json","todosFromServer","data","info","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4c98b4af.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport './TodoList.scss';\n\nexport class TodoList extends React.Component {\n  state = {\n    searchText: '',\n    status: 'all',\n  }\n\n  createTodos() {\n    const { selectedId, selectionChanged, todoCompleted } = this.props;\n    const filtered = this.filteredTodos();\n\n    return filtered.map(todo => (\n      <li\n        key={todo.id}\n        className={classnames(\n          'TodoList__item',\n          { 'TodoList__item--checked': todo.completed },\n          { 'TodoList__item--unchecked': !todo.completed },\n        )}\n      >\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={todo.completed}\n            onClick={() => todoCompleted(todo.id)}\n            readOnly\n          />\n          <p>{todo.title}</p>\n        </label>\n\n        <button\n          className={classnames(\n            'TodoList__user-button',\n            { 'TodoList__user-button--selected': todo.userId === selectedId },\n            'button',\n          )}\n          onClick={() => {\n            selectionChanged(todo.userId);\n          }}\n          type=\"button\"\n        >\n          User&nbsp;#\n          {todo.userId}\n        </button>\n      </li>\n    ));\n  }\n\n  changeSearch(newSearch) {\n    this.setState({\n      searchText: newSearch,\n    });\n  }\n\n  changeStatus(newStatus) {\n    this.setState({\n      status: newStatus,\n    });\n  }\n\n  filteredTodos() {\n    const { status, searchText } = this.state;\n    const { todos: initialTodos } = this.props;\n\n    let newStatusTodos = initialTodos;\n\n    if (status !== 'all') {\n      newStatusTodos = newStatusTodos\n        .filter(todo => todo.completed === (status === 'completed'));\n    }\n\n    if (searchText.length) {\n      newStatusTodos = newStatusTodos\n        .filter(todo => todo.title && todo.title.includes(searchText));\n    }\n\n    return newStatusTodos;\n  }\n\n  render() {\n    const { searchText, status } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>\n          Todos:\n        </h2>\n        <div className=\"TodoList__controls\">\n          <input\n            className=\"TodoList__input\"\n            type=\"text\"\n            value={searchText}\n            onChange={e => this.changeSearch(e.target.value)}\n          />\n          <select\n            name=\"filter\"\n            id=\"filter\"\n            className=\"TodoList__select\"\n            value={status}\n            onChange={e => this.changeStatus(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </div>\n        <ul>\n          {this.createTodos()}\n        </ul>\n      </div>\n    );\n  }\n}\n\nconst TodoType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  completed: PropTypes.bool.isRequired,\n});\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(TodoType).isRequired,\n  selectedId: PropTypes.string.isRequired,\n  selectionChanged: PropTypes.string.isRequired,\n  todoCompleted: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = ({ user, deselectUser }) => {\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          Selected user:\n          {user.id}\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{user.name}</h3>\n      <p className=\"CurrentUser__email\">{user.email}</p>\n      <p className=\"CurrentUser__phone\">{user.phone}</p>\n      <button\n        type=\"button\"\n        className=\"CurrentUser__clear\"\n        onClick={deselectUser}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n\nconst UserType = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n});\n\nCurrentUser.propTypes = {\n  user: UserType.isRequired,\n  deselectUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodos, getUser } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    userInfo: null,\n    selectedUserId: -1,\n  };\n\n  async componentDidMount() {\n    const todosFromServer = await getTodos();\n\n    this.setState({ todos: todosFromServer.data });\n  }\n\n  selectUser = (newUserId) => {\n    this.setState((state) => {\n      if (state.selectedUserId !== newUserId) {\n        this.updateUserInfo(newUserId);\n\n        return { selectedUserId: newUserId };\n      }\n\n      return state;\n    });\n  }\n\n  completeTodo = (todoId) => {\n    this.setState((prevState) => {\n      const updatedTodos = prevState.todos\n        .map(todo => ((todo.id !== todoId)\n          ? { ...todo }\n          : {\n            ...todo, completed: !todo.completed,\n          }));\n\n      return {\n        todos: updatedTodos,\n      };\n    });\n  }\n\n  clearSelection = () => {\n    this.setState(\n      {\n        selectedUserId: -1,\n        userInfo: null,\n      },\n    );\n  }\n\n  async updateUserInfo(newUserId) {\n    if (newUserId >= 0) {\n      const info = await getUser(newUserId);\n\n      this.setState({\n        userInfo: info ? info.data : info,\n      });\n    }\n  }\n\n  render() {\n    const { todos, userInfo } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            selectedId={userInfo ? userInfo.id : 0}\n            selectionChanged={this.selectUser}\n            todoCompleted={this.completeTodo}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {userInfo ? (\n              <CurrentUser user={userInfo} deselectUser={this.clearSelection} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const BASE_TODO_URL = 'https://mate-api.herokuapp.com/todos';\nconst BASE_USER_URL = 'https://mate-api.herokuapp.com/users/';\n\nexport function getTodos() {\n  return fetch(BASE_TODO_URL)\n    .then(result => result.json());\n}\n\nexport function getUser(userId) {\n  return fetch(`${BASE_USER_URL}/${userId}`)\n    .then(result => result.json());\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}